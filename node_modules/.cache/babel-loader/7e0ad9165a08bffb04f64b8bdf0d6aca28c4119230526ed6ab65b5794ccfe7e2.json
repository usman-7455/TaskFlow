{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammad Usman\\\\Desktop\\\\important\\\\react-task-management-master\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TaskDashborad from \"./Context/TaskDashborad\";\nimport Auth from \"./Context/Auth\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport LandingPage from \"./Context/LandingPage\";\nimport Navbar from \"./Context/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(() => localStorage.getItem(\"currentUser\") || \"\");\n  const [isAdmin, setIsAdmin] = useState(() => localStorage.getItem(\"isAdmin\") === \"true\");\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem(\"currentUser\", user);\n      localStorage.setItem(\"isAdmin\", isAdmin);\n    } else {\n      localStorage.removeItem(\"currentUser\");\n      localStorage.removeItem(\"isAdmin\");\n    }\n  }, [user, isAdmin]);\n  const handleLogin = (username, adminFlag) => {\n    setUser(username);\n    setIsAdmin(adminFlag);\n  };\n  const handleLogout = () => {\n    setUser(\"\");\n    setIsAdmin(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    basename: \"/react-task-management\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      user: user,\n      isAdmin: isAdmin,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Auth, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: user ? /*#__PURE__*/_jsxDEV(TaskDashborad, {\n          username: user,\n          isAdmin: isAdmin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Auth, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ptk+zI/qVrPXKr/AUgjPC1xtvJo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskDashborad","Auth","BrowserRouter","Router","Routes","Route","LandingPage","Navbar","jsxDEV","_jsxDEV","App","_s","user","setUser","localStorage","getItem","isAdmin","setIsAdmin","setItem","removeItem","handleLogin","username","adminFlag","handleLogout","basename","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/Muhammad Usman/Desktop/important/react-task-management-master/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TaskDashborad from \"./Context/TaskDashborad\";\nimport Auth from \"./Context/Auth\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport LandingPage from \"./Context/LandingPage\";\nimport Navbar from \"./Context/Navbar\";\n\nconst App = () => {\n  const [user, setUser] = useState(() => localStorage.getItem(\"currentUser\") || \"\");\n  const [isAdmin, setIsAdmin] = useState(() => localStorage.getItem(\"isAdmin\") === \"true\");\n\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem(\"currentUser\", user);\n      localStorage.setItem(\"isAdmin\", isAdmin);\n    } else {\n      localStorage.removeItem(\"currentUser\");\n      localStorage.removeItem(\"isAdmin\");\n    }\n  }, [user, isAdmin]);\n\n  const handleLogin = (username, adminFlag) => {\n    setUser(username);\n    setIsAdmin(adminFlag);\n  };\n\n  const handleLogout = () => {\n    setUser(\"\");\n    setIsAdmin(false);\n  };\n\n  return (\n    <Router basename=\"/react-task-management\">\n      <Navbar user={user} isAdmin={isAdmin} handleLogout={handleLogout} />\n      <Routes>\n        <Route path=\"/\" element={<LandingPage />} />\n        <Route path=\"/login\" element={<Auth onLogin={handleLogin} />} />\n        <Route path=\"/dashboard\" element={user ? (\n          <TaskDashborad username={user} isAdmin={isAdmin} />\n        ) : <Auth onLogin={handleLogin} />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}